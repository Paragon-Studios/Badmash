"use strict";
var __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    var desc = Object.getOwnPropertyDescriptor(m, k);
    if (!desc || ("get" in desc ? !m.__esModule : desc.writable || desc.configurable)) {
      desc = { enumerable: true, get: function() { return m[k]; } };
    }
    Object.defineProperty(o, k2, desc);
}) : (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    o[k2] = m[k];
}));
var __setModuleDefault = (this && this.__setModuleDefault) || (Object.create ? (function(o, v) {
    Object.defineProperty(o, "default", { enumerable: true, value: v });
}) : function(o, v) {
    o["default"] = v;
});
var __importStar = (this && this.__importStar) || function (mod) {
    if (mod && mod.__esModule) return mod;
    var result = {};
    if (mod != null) for (var k in mod) if (k !== "default" && Object.prototype.hasOwnProperty.call(mod, k)) __createBinding(result, mod, k);
    __setModuleDefault(result, mod);
    return result;
};
var __importDefault = (this && this.__importDefault) || function (mod) {
    return (mod && mod.__esModule) ? mod : { "default": mod };
};
Object.defineProperty(exports, "__esModule", { value: true });
exports.transformStatement = exports.transformShortcutIfLiterals = void 0;
/* eslint-disable @typescript-eslint/no-non-null-assertion */
var chalk_1 = __importDefault(require("chalk"));
var path_1 = __importDefault(require("path"));
var typescript_1 = __importStar(require("typescript"));
var transformNode_1 = require("./transformNode");
function transformShortcutIfLiterals(state, node) {
    var _a;
    if (state.config.generateEnumUUIDs &&
        typescript_1.default.isEnumDeclaration(node) &&
        ((_a = node.modifiers) === null || _a === void 0 ? void 0 : _a.find(function (f) { return f.kind === typescript_1.default.SyntaxKind.ConstKeyword; }))) {
        var guidProvider_1 = state.guidProvider;
        var docTags = typescript_1.default.getJSDocTags(node);
        var generationType_1 = guidProvider_1.getGenerationTypeForEnum(node, state.config.generationType);
        if (generationType_1) {
            state.logger.infoIfVerbose("Transforming detected UUID enumerable object ".concat(chalk_1.default.green(path_1.default.relative(state.options.baseUrl, node.getSourceFile().fileName)), ": ").concat(chalk_1.default.yellow(node.name.text)));
            var parentLabel_1 = "".concat(node.getSourceFile().fileName, ":const-enum@").concat(node.name.text);
            return typescript_1.factory.updateEnumDeclaration(node, undefined, node.modifiers, node.name, node.members.map(function (m) {
                return typescript_1.factory.updateEnumMember(m, m.name, typescript_1.factory.createStringLiteral(guidProvider_1.getStringForConstLabel("".concat(parentLabel_1, ":").concat(m.name.getText()), generationType_1)));
            }));
        }
    }
    return node;
}
exports.transformShortcutIfLiterals = transformShortcutIfLiterals;
function transformStatement(state, statement) {
    return transformShortcutIfLiterals(state, typescript_1.default.visitEachChild(statement, function (newNode) { return (0, transformNode_1.transformNode)(state, newNode); }, state.context));
}
exports.transformStatement = transformStatement;
