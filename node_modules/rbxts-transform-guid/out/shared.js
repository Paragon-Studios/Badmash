"use strict";
var __importDefault = (this && this.__importDefault) || function (mod) {
    return (mod && mod.__esModule) ? mod : { "default": mod };
};
Object.defineProperty(exports, "__esModule", { value: true });
exports.formatTransformerDiagnostic = exports.formatTransformerWarning = exports.formatTransformerInfo = exports.formatTransformerDebug = exports.getDebugInfo = void 0;
var chalk_1 = __importDefault(require("chalk"));
var path_1 = __importDefault(require("path"));
// eslint-disable-next-line @typescript-eslint/no-var-requires
var name = "[".concat(require("../package.json").name, "]");
function getDebugInfo(node) {
    var sourceFile = node.getSourceFile();
    var linePos = sourceFile.getLineAndCharacterOfPosition(node.getStart());
    var relativePath = path_1.default.relative(process.cwd(), node.getSourceFile().fileName).replace(/\\/g, "/");
    return {
        sourceFile: sourceFile,
        linePos: linePos.line + 1,
        relativePath: relativePath,
    };
}
exports.getDebugInfo = getDebugInfo;
function formatTransformerDebug(message, node) {
    if (node) {
        var info = getDebugInfo(node);
        var str = "".concat(chalk_1.default.gray(name), " ").concat(chalk_1.default.green("macro debug"), " ").concat(chalk_1.default.cyan(info.relativePath), ":").concat(chalk_1.default.yellow(info.linePos), " - ").concat(message, "\n").concat(chalk_1.default.italic(node.getText()));
        return str;
    }
    else {
        return "".concat(chalk_1.default.gray(name), " ").concat(chalk_1.default.green("macro debug"), " - ") + message;
    }
}
exports.formatTransformerDebug = formatTransformerDebug;
function formatTransformerInfo(message, node) {
    if (node) {
        var str = "".concat(chalk_1.default.gray(name), " ").concat(chalk_1.default.cyan("macro info"), " - ").concat(message, "\n").concat(chalk_1.default.italic(node.getText()));
        return str;
    }
    else {
        return "".concat(chalk_1.default.gray(name), " ").concat(chalk_1.default.cyan("macro info"), " ") + message;
    }
}
exports.formatTransformerInfo = formatTransformerInfo;
function formatTransformerWarning(message, node, suggestion) {
    if (node) {
        var info = getDebugInfo(node);
        var str = "".concat(chalk_1.default.gray(name), " ").concat(chalk_1.default.yellow("macro warning"), " ").concat(chalk_1.default.cyan(info.relativePath), ":").concat(chalk_1.default.yellow(info.linePos), " - ").concat(message, "\n").concat(chalk_1.default.italic(node.getText()));
        if (suggestion) {
            str += "\n* " + chalk_1.default.yellow(suggestion);
        }
        return str;
    }
    else {
        return "".concat(chalk_1.default.gray(name), " ").concat(chalk_1.default.yellow("macro warning"), " - ") + message;
    }
}
exports.formatTransformerWarning = formatTransformerWarning;
function formatTransformerDiagnostic(message, node, suggestion) {
    if (node) {
        var info = getDebugInfo(node);
        var str = "".concat(chalk_1.default.gray(name), " ").concat(chalk_1.default.red("macro error"), " ").concat(chalk_1.default.cyan(info.relativePath), ":").concat(chalk_1.default.yellow(info.linePos), " - ").concat(message, "\n").concat(chalk_1.default.italic(node.getText()));
        if (suggestion) {
            str += "\n* " + chalk_1.default.yellow(suggestion);
        }
        return str;
    }
    else {
        return "".concat(chalk_1.default.gray(name), " ").concat(chalk_1.default.red("macro error"), " - ") + message;
    }
}
exports.formatTransformerDiagnostic = formatTransformerDiagnostic;
