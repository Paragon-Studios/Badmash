-- Compiled with roblox-ts v2.1.0
local TS = _G[script]
local _roact_hooked = TS.import(script, TS.getModule(script, "@rbxts", "roact-hooked").src)
local useEffect = _roact_hooked.useEffect
local useMutable = _roact_hooked.useMutable
local _services = TS.import(script, TS.getModule(script, "@rbxts", "services"))
local HttpService = _services.HttpService
local RunService = _services.RunService
--[[
	*
	* Binds a callback with a unique key to render step. Useful for binding a
	* callback whose key might overlap with other components or not clean up in
	* time.
	* @param priority The render priority of the binding.
	* @param callback The callback to bind.
]]
local function useBindToRenderStep(priority, callback)
	local callbackRef = useMutable(callback)
	callbackRef.current = callback
	useEffect(function()
		local key = HttpService:GenerateGUID(false)
		RunService:BindToRenderStep(key, priority, function(deltaTime)
			callbackRef.current(deltaTime)
		end)
		return function()
			RunService:UnbindFromRenderStep(key)
		end
	end, { priority })
end
return {
	useBindToRenderStep = useBindToRenderStep,
}
