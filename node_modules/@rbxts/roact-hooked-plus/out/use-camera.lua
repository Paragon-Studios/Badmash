-- Compiled with roblox-ts v2.1.0
local TS = _G[script]
local _roact_hooked = TS.import(script, TS.getModule(script, "@rbxts", "roact-hooked").src)
local useEffect = _roact_hooked.useEffect
local useState = _roact_hooked.useState
local Workspace = TS.import(script, TS.getModule(script, "@rbxts", "services")).Workspace
--[[
	*
	* Returns a reference to the camera object. Rerenders if the CurrentCamera
	* value changes.
	* @returns A reference to the camera object.
]]
local function useCamera()
	local camera, setCamera = useState(function()
		return Workspace.CurrentCamera or Instance.new("Camera")
	end)
	useEffect(function()
		local connection = Workspace:GetPropertyChangedSignal("CurrentCamera"):Connect(function()
			if Workspace.CurrentCamera then
				setCamera(Workspace.CurrentCamera)
			end
		end)
		return function()
			connection:Disconnect()
		end
	end, {})
	return camera
end
return {
	useCamera = useCamera,
}
