-- Compiled with roblox-ts v2.1.0
local TS = _G[script]
local _roact_hooked = TS.import(script, TS.getModule(script, "@rbxts", "roact-hooked").src)
local useBinding = _roact_hooked.useBinding
local useEffect = _roact_hooked.useEffect
local useMutable = _roact_hooked.useMutable
local UserInputService = TS.import(script, TS.getModule(script, "@rbxts", "services")).UserInputService
local function useMouse(onChange)
	local location, setLocation = useBinding(UserInputService:GetMouseLocation())
	local onChangeRef = useMutable(onChange)
	onChangeRef.current = onChange
	useEffect(function()
		local handle = UserInputService.InputChanged:Connect(function(input)
			if input.UserInputType == Enum.UserInputType.MouseMovement or input.UserInputType == Enum.UserInputType.Touch then
				local location = UserInputService:GetMouseLocation()
				setLocation(location)
				local _result = onChangeRef.current
				if _result ~= nil then
					_result(location)
				end
			end
		end)
		return function()
			handle:Disconnect()
		end
	end, {})
	return location
end
return {
	useMouse = useMouse,
}
