-- Compiled with roblox-ts v2.1.0
local TS = _G[script]
local useState = TS.import(script, TS.getModule(script, "@rbxts", "roact-hooked").src).useState
local resolve = TS.import(script, script.Parent, "utils", "resolve").resolve
--[[
	*
	* @see https://mantine.dev/hooks/use-set-state/
]]
local function useSetState(initialState)
	local state, _setState = useState(initialState)
	local setState = function(statePartial)
		return _setState(function(current)
			local _object = {}
			for _k, _v in current do
				_object[_k] = _v
			end
			for _k, _v in resolve(statePartial, current) do
				_object[_k] = _v
			end
			return _object
		end)
	end
	return state, setState
end
return {
	useSetState = useSetState,
}
