-- Compiled with roblox-ts v2.1.0
local TS = _G[script]
local isMotor = TS.import(script, TS.getModule(script, "@rbxts", "flipper").src).isMotor
local Roact = TS.import(script, TS.getModule(script, "@rbxts", "roact").src)
local AssignedBinding = setmetatable({}, {
	__tostring = function()
		return "AssignedBinding"
	end,
})
local function getBinding(motor)
	local _motor = motor
	assert(_motor, "Missing argument #1: motor")
	local _arg0 = isMotor(motor)
	assert(_arg0, "Provided value is not a motor")
	if motor[AssignedBinding] ~= nil then
		return motor[AssignedBinding]
	end
	local binding, setBindingValue = Roact.createBinding(motor:getValue())
	motor:onStep(setBindingValue)
	motor[AssignedBinding] = binding
	return binding
end
return {
	getBinding = getBinding,
}
