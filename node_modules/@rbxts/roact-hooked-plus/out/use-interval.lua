-- Compiled with roblox-ts v2.1.0
local TS = _G[script]
local _roact_hooked = TS.import(script, TS.getModule(script, "@rbxts", "roact-hooked").src)
local useMutable = _roact_hooked.useMutable
local useState = _roact_hooked.useState
local _set_interval = TS.import(script, script.Parent, "utils", "set-interval")
local clearInterval = _set_interval.clearInterval
local setInterval = _set_interval.setInterval
--[[
	*
	* @see https://mantine.dev/hooks/use-interval/
]]
local function useInterval(fn, intervalMs)
	local active, setActive = useState(false)
	local intervalRef = useMutable()
	local start = function()
		if not active then
			setActive(true)
			intervalRef.current = setInterval(fn, intervalMs)
		end
	end
	local stop = function()
		setActive(false)
		clearInterval(intervalRef.current)
	end
	local toggle = function()
		if active then
			stop()
		else
			start()
		end
	end
	return {
		start = start,
		stop = stop,
		toggle = toggle,
		active = active,
	}
end
return {
	useInterval = useInterval,
}
