-- Compiled with roblox-ts v2.1.0
local TS = _G[script]
local _roact_hooked = TS.import(script, TS.getModule(script, "@rbxts", "roact-hooked").src)
local useEffect = _roact_hooked.useEffect
local useMutable = _roact_hooked.useMutable
local function useEvent(event, callback)
	local callbackRef = useMutable(callback)
	callbackRef.current = callback
	useEffect(function()
		if not callback then
			return nil
		end
		local connection = event:Connect(function(...)
			local args = { ... }
			local _result = callbackRef.current
			if _result ~= nil then
				_result(unpack(args))
			end
		end)
		return function()
			return connection:Disconnect()
		end
	end, { event, callback ~= nil })
end
return {
	useEvent = useEvent,
}
