-- Compiled with roblox-ts v2.1.0
--[[
	*
	* Sets the velocity of the motor.
	* @param motor The motor to set the velocity of
	* @param velocity The velocity to set
]]
local function setMotorVelocity(motor, velocity)
	motor._state.velocity = velocity
end
--[[
	*
	* Applies an impulse to the motor's velocity.
	* @param motor The motor to apply the impulse to
	* @param impulse The impulse to apply
]]
local function applyMotorImpulse(motor, impulse)
	local state = motor._state
	local _condition = state.velocity
	if _condition == nil then
		_condition = 0
	end
	state.velocity = _condition + impulse
end
--[[
	*
	* Sets the value of the motor.
	* @param motor The motor to set the value of
	* @param value The value to set
]]
local function setMotorValue(motor, value)
	motor._state.value = value
end
--[[
	*
	* Sets the velocity of a group motor.
	* @param motor The motor to set the velocity of
	* @param values The velocities to set
]]
local function setGroupMotorVelocity(motor, values)
	local motors = motor._motors
	for key, velocity in pairs(values) do
		motors[key]._state.velocity = velocity
	end
end
--[[
	*
	* Sets the value of a group motor.
	* @param motor The motor to set the value of
	* @param values The values to set
]]
local function setGroupMotorValue(motor, values)
	local motors = motor._motors
	for key, value in pairs(values) do
		motors[key]._state.value = value
	end
end
--[[
	*
	* Applies an impulse to the velocity of a group motor.
	* @param motor The motor to apply the impulse to
	* @param values The impulses to apply
]]
local function applyGroupMotorImpulse(motor, values)
	local motors = motor._motors
	for key, impulse in pairs(values) do
		local state = motors[key]._state
		local _condition = state.velocity
		if _condition == nil then
			_condition = 0
		end
		state.velocity = _condition + impulse
	end
end
return {
	setMotorVelocity = setMotorVelocity,
	applyMotorImpulse = applyMotorImpulse,
	setMotorValue = setMotorValue,
	setGroupMotorVelocity = setGroupMotorVelocity,
	setGroupMotorValue = setGroupMotorValue,
	applyGroupMotorImpulse = applyGroupMotorImpulse,
}
