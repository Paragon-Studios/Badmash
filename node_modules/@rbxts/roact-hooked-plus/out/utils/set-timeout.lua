-- Compiled with roblox-ts v2.1.0
local Timeout
do
	Timeout = setmetatable({}, {
		__tostring = function()
			return "Timeout"
		end,
	})
	Timeout.__index = Timeout
	function Timeout.new(...)
		local self = setmetatable({}, Timeout)
		return self:constructor(...) or self
	end
	function Timeout:constructor(callback, milliseconds, ...)
		local args = { ... }
		self.running = true
		task.delay(milliseconds / 1000, function()
			if self.running then
				callback(unpack(args))
			end
		end)
	end
	function Timeout:clear()
		self.running = false
	end
end
local function setTimeout(callback, milliseconds, ...)
	local args = { ... }
	return Timeout.new(callback, milliseconds, unpack(args))
end
local function clearTimeout(timeout)
	timeout:clear()
end
return {
	setTimeout = setTimeout,
	clearTimeout = clearTimeout,
	Timeout = Timeout,
}
