/// <reference types="@rbxts/compiler-types" />
/// <reference types="@rbxts/compiler-types" />
/// <reference types="roact" />
/// <reference types="@rbxts/compiler-types" />
import { GroupMotor, Instant, Spring } from "@rbxts/flipper";
type GroupMotorGoals<T> = T extends Array<number> ? Array<Spring | Instant> : T extends {
    [name: string]: number;
} ? {
    [P in keyof T]?: Spring | Instant;
} : never;
export declare function useGroupMotor<T extends number[] | Readonly<Record<string, number>>>(initialValue: T): LuaTuple<[import("@rbxts/roact").Binding<T>, (goal: GroupMotorGoals<T>) => void, GroupMotor<T>]>;
export {};
