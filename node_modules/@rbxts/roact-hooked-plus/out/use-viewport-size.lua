-- Compiled with roblox-ts v2.1.0
local TS = _G[script]
local _roact_hooked = TS.import(script, TS.getModule(script, "@rbxts", "roact-hooked").src)
local useBinding = _roact_hooked.useBinding
local useEffect = _roact_hooked.useEffect
local useMutable = _roact_hooked.useMutable
local Workspace = TS.import(script, TS.getModule(script, "@rbxts", "services")).Workspace
local useCamera = TS.import(script, script.Parent, "use-camera").useCamera
--[[
	*
	* Returns a binding to the current screen size.
	* @param onChange Fires when the viewport size changes
]]
local function useViewportSize(onChange)
	local _result = Workspace.CurrentCamera
	if _result ~= nil then
		_result = _result.ViewportSize
	end
	local _condition = _result
	if _condition == nil then
		_condition = Vector2.one
	end
	local size, setSize = useBinding(_condition)
	local camera = useCamera()
	local onChangeRef = useMutable(onChange)
	onChangeRef.current = onChange
	useEffect(function()
		local connection = camera:GetPropertyChangedSignal("ViewportSize"):Connect(function()
			setSize(camera.ViewportSize)
			local _result_1 = onChangeRef.current
			if _result_1 ~= nil then
				_result_1(camera.ViewportSize)
			end
		end)
		return function()
			connection:Disconnect()
		end
	end, { camera })
	return size
end
return {
	useViewportSize = useViewportSize,
}
